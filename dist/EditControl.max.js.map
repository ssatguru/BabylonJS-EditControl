{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/EditControl.ts","webpack:///external {\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\",\"root\":\"BABYLON\"}"],"names":[],"mappings":"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","file":"EditControl.max.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babylonjs\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"babylonjs\")) : factory(root[\"BABYLON\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_babylonjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/EditControl.ts\");\n","\r\nimport {\r\n    AbstractMesh,\r\n    Axis,\r\n    BoundingBox,\r\n    Camera,\r\n    Color3,\r\n    LinesMesh,\r\n    Material,\r\n    Matrix,\r\n    Mesh,\r\n    MeshBuilder,\r\n    Node,\r\n    PickingInfo,\r\n    Quaternion,\r\n    Scene,\r\n    Space,\r\n    StandardMaterial,\r\n    Vector3,\r\n    TransformNode,\r\n    Engine\r\n}\r\n    from 'babylonjs';\r\n\r\n\r\n\r\nenum ActionType {\r\n    TRANS = 0,\r\n    ROT = 1,\r\n    SCALE = 2\r\n}\r\n\r\n/**\r\n * Draws a transform widget at the mesh's location (its pivot location).\r\n * The widget transforms(translates,rotates and scales) the mesh based on user\r\n * interactions with the widget.\r\n * The widget shows the mesh position and rotation at any time. \r\n * The widget follows the mesh constantly. \r\n * Note: An alternate approach would have been for the mesh to follow the widget.\r\n * The problem with the alternate approach - syncing the transforms\r\n * if the mesh was being transformed by entities other than the widget say physics \r\n * or script for example.\r\n * \r\n */\r\n\r\nexport class EditControl {\r\n    private _mesh: TransformNode;\r\n\r\n\r\n    private _canvas: HTMLCanvasElement;\r\n    private _scene: Scene;\r\n    private _mainCamera: Camera;\r\n    //root of the edit control\r\n    private _ecRoot: Mesh;\r\n    private _local: boolean = true;\r\n    private _snapT: boolean = false;\r\n    private _snapR: boolean = false;\r\n    private _transSnap: number = 1;\r\n    private _rotSnap: number = Math.PI / 18;\r\n    private _axesLen: number = 0.4;\r\n    private _axesScale: number = 1;\r\n    //how close to an axis should we get before we can pick it \r\n    private _pickWidth: number = 0.02;\r\n    private _redMat: StandardMaterial;\r\n    private _greenMat: StandardMaterial;\r\n    private _blueMat: StandardMaterial;\r\n    private _whiteMat: StandardMaterial;\r\n    private _yellowMat: StandardMaterial;\r\n    private _redCol: Color3 = new Color3(1, 0.2, 0.2);\r\n    private _greenCol: Color3 = new Color3(0.2, 1, 0.2);\r\n    private _blueCol: Color3 = new Color3(0.2, 0.2, 1);\r\n    private _whiteCol: Color3 = new Color3(1, 1, 1);\r\n    private _yellowCol: Color3 = new Color3(1, 1, 0.2);\r\n\r\n    private _actHist: ActHist;\r\n    private _renderer: () => void;\r\n    private _pointerdown: EventListener;\r\n    private _pointerup: EventListener;\r\n    private _pointermove: EventListener;\r\n    //axes visibility\r\n    private _visibility: number = 0.75;\r\n\r\n    //lhs-rhs issue. lhs mesh in rhs or rhs mesh in lhs\r\n    private _lhsRhs: boolean = false;\r\n\r\n    public constructor(mesh: TransformNode, camera: Camera, canvas: HTMLCanvasElement, scale?: number, eulerian?: boolean, pickWidth?: number) {\r\n\r\n        this._mesh = mesh;\r\n        this._mainCamera = camera;\r\n        this._canvas = canvas;\r\n\r\n        if (scale != null) {\r\n            this._axesScale = scale;\r\n        }\r\n\r\n        if (eulerian !== null) {\r\n            this._eulerian = eulerian;\r\n        } else {\r\n            this._eulerian = false;\r\n        }\r\n        this._checkQuaternion();\r\n\r\n        if (pickWidth != null) {\r\n            this._pickWidth = pickWidth;\r\n        }\r\n\r\n        this._scene = mesh.getScene();\r\n        this._actHist = new ActHist(mesh, 10);\r\n\r\n        mesh.computeWorldMatrix(true);\r\n        this._boundingDimesion = this._getBoundingDimension(mesh);\r\n        this._setLocalAxes(mesh);\r\n        this._lhsRhs = this._check_LHS_RHS(mesh);\r\n        console.log(\"lhs rhs issue \" + this._lhsRhs);\r\n\r\n        //build the edit control axes\r\n        this._ecRoot = new Mesh(\"\", this._scene);\r\n        this._ecRoot.rotationQuaternion = Quaternion.Identity();\r\n        this._ecRoot.visibility = 0;\r\n        this._ecRoot.isPickable = false;\r\n\r\n        this._createMaterials(this._scene);\r\n\r\n        let guideAxes: Mesh = this._createCommonAxes();\r\n        guideAxes.parent = this._ecRoot;\r\n\r\n        //build the pickplanes\r\n        let pickPlanes: Mesh = this._createPickPlanes();\r\n        pickPlanes.parent = this._ecRoot;\r\n\r\n        this._pointerdown = (evt) => { return this._onPointerDown(evt) };\r\n        this._pointerup = (evt) => { return this._onPointerUp(evt) };\r\n        this._pointermove = (evt) => { return this._onPointerMove(evt) };\r\n\r\n        //use canvas rather than scene to handle pointer events\r\n        //scene cannot have mutiple eventlisteners for an event\r\n        //with canvas one will have to do ones own pickinfo generation.\r\n\r\n        canvas.addEventListener(\"pointerdown\", this._pointerdown, false);\r\n        canvas.addEventListener(\"pointerup\", this._pointerup, false);\r\n        canvas.addEventListener(\"pointermove\", this._pointermove, false);\r\n\r\n\r\n        this._renderer = () => { return this._renderLoopProcess() };\r\n        this._scene.registerBeforeRender(this._renderer);\r\n    }\r\n\r\n    public getRoot(): AbstractMesh {\r\n        return this._ecRoot;\r\n    }\r\n\r\n    //make sure that if eulerian is set to false then mesh's rotation is in quaternion\r\n    //throw error and exit if not so.\r\n    private _checkQuaternion() {\r\n        if (!this._eulerian) {\r\n            if ((this._mesh.rotationQuaternion == null) || (this._mesh.rotationQuaternion == undefined)) {\r\n                throw \"Error: Eulerian is set to false but the mesh's rotationQuaternion is not set.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n        * checks if a have left hand , right hand issue.\r\n        * In other words if a mesh is a LHS mesh in RHS system or \r\n        * a RHS mesh in LHS system\r\n        * The X axis will be reversed in such cases.\r\n        * thus Cross product of X and Y should be inverse of Z.\r\n        * \r\n        * if no parent then we are ok.\r\n        * If parent and parent has issue then we have issue.\r\n        * \r\n        */\r\n    private _check_LHS_RHS(mesh: TransformNode) {\r\n        let _issue: boolean = false;\r\n        let root: Node = mesh.parent;\r\n        if (root == null) return false;\r\n        this._setLocalAxes(root);\r\n        let actualZ = Vector3.Cross(this._localX, this._localY);\r\n        //same direction or opposite direction of Z\r\n        if (Vector3.Dot(actualZ, this._localZ) < 0) _issue = true;\r\n        else _issue = false;\r\n        this._setLocalAxes(mesh);\r\n        return _issue;\r\n    }\r\n\r\n    private _ecMatrix: Matrix = new Matrix();\r\n    //edit control to camera vector\r\n    private _ecTOcamera: Vector3 = new Vector3(0, 0, 0);\r\n    private _renderLoopProcess() {\r\n\r\n        //sync the edit control position and rotation with that of mesh\r\n        this._ecRoot.position = this._mesh.getAbsolutePivotPoint();\r\n        this._setECRotation();\r\n\r\n        //scale the EditControl so it seems at the same distance from camera/user\r\n        this._setECScale();\r\n\r\n        //rotate the free move,rotate,scale pick plane to face the camera/user\r\n        if (this._local) {\r\n            this._ecRoot.getWorldMatrix().invertToRef(this._ecMatrix);\r\n            Vector3.TransformCoordinatesToRef(this._mainCamera.position, this._ecMatrix, this._ecTOcamera);\r\n            //note pALL is child of ecRoot hence lookAt in local space\r\n            this._pALL.lookAt(this._ecTOcamera, 0, 0, 0, Space.LOCAL);\r\n        } else {\r\n            this._mainCamera.position.subtractToRef(this._ecRoot.position, this._ecTOcamera);\r\n            this._pALL.lookAt(this._mainCamera.position, 0, 0, 0, Space.WORLD);\r\n        }\r\n\r\n        //rotate the rotation and planar guide to face the camera/user\r\n        if (this._rotEnabled) {\r\n            this._rotRotGuides();\r\n        }\r\n        else if (this._transEnabled) this._rotPlanarGuides(this._tXZ, this._tZY, this._tYX);\r\n        else if (this._scaleEnabled) this._rotPlanarGuides(this._sXZ, this._sZY, this._sYX);\r\n\r\n        //check pointer over axes only during pointer moves\r\n        //this.onPointerOver();\r\n    }\r\n\r\n    /**\r\n     * sets rotaion of edit control to that of the mesh\r\n     */\r\n    private _setECRotation() {\r\n        if (this._local) {\r\n            if (this._mesh.parent == null) {\r\n                if (this._eulerian) {\r\n                    let rot: Vector3 = this._mesh.rotation;\r\n                    Quaternion.RotationYawPitchRollToRef(rot.y, rot.x, rot.z, this._ecRoot.rotationQuaternion);\r\n                } else {\r\n                    this._ecRoot.rotationQuaternion.copyFrom(this._mesh.rotationQuaternion);\r\n                }\r\n            } else {\r\n\r\n                if (this._isScaleUnEqual(this._mesh)) return;\r\n\r\n                this._mesh.getWorldMatrix().getRotationMatrixToRef(this._tm);\r\n                Quaternion.FromRotationMatrixToRef(this._tm, this._ecRoot.rotationQuaternion);\r\n                //this._ecRoot.rotationQuaternion.normalize();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * checks if any of the mesh's ancestors has non uniform scale\r\n     */\r\n    private _isScaleUnEqual(mesh: TransformNode): boolean {\r\n        if (mesh.parent == null) return false;\r\n        while (mesh.parent != null) {\r\n            if (((<Mesh>mesh.parent).scaling.x != (<Mesh>mesh.parent).scaling.y ||\r\n                (<Mesh>mesh.parent).scaling.y != (<Mesh>mesh.parent).scaling.z)) {\r\n                return true;\r\n            } else {\r\n                mesh = <Mesh>mesh.parent;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //how far away from camera should the edit control appear to be\r\n    private _distFromCamera: number = 2;\r\n    //vector from camera to edit control\r\n    private _cameraTOec: Vector3 = new Vector3(0, 0, 0);\r\n    private _cameraNormal: Vector3 = new Vector3(0, 0, 0);\r\n    private _setECScale() {\r\n        this._ecRoot.position.subtractToRef(this._mainCamera.position, this._cameraTOec);\r\n        Vector3.FromFloatArrayToRef(this._mainCamera.getWorldMatrix().asArray(), 8, this._cameraNormal);\r\n\r\n        //get distance of edit control from the camera plane \r\n        //project \"camera to edit control\" vector onto the camera normal\r\n        let parentOnNormal: number = Vector3.Dot(this._cameraTOec, this._cameraNormal) / this._cameraNormal.length();\r\n\r\n        let s: number = Math.abs(parentOnNormal / this._distFromCamera);\r\n        Vector3.FromFloatsToRef(s, s, s, this._ecRoot.scaling);\r\n        //Vector3.FromFloatsToRef(s,s,s,this.pALL.scaling);\r\n    }\r\n\r\n\r\n    //rotate the rotation guides so that they are facing the camera\r\n    private _rotRotGuides() {\r\n        let rotX = Math.atan(this._ecTOcamera.y / this._ecTOcamera.z);\r\n        if (this._ecTOcamera.z >= 0) {\r\n            this._rX.rotation.x = -rotX;\r\n        } else {\r\n            this._rX.rotation.x = -rotX - Math.PI;\r\n        }\r\n\r\n        let rotY = Math.atan(this._ecTOcamera.x / this._ecTOcamera.z);\r\n        if (this._ecTOcamera.z >= 0) {\r\n            this._rY.rotation.y = rotY;\r\n        } else {\r\n            this._rY.rotation.y = rotY + Math.PI;\r\n        }\r\n\r\n        let rotZ = Math.atan(this._ecTOcamera.x / this._ecTOcamera.y);\r\n        if (this._ecTOcamera.y >= 0) {\r\n            this._rZ.rotation.z = -rotZ;\r\n        } else {\r\n            this._rZ.rotation.z = -rotZ - Math.PI;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * rotate the planar guide so that they are facing the camera\r\n     */\r\n    private _rotPlanarGuides(XZ: Mesh, ZY: Mesh, YX: Mesh) {\r\n        let ec: Vector3 = this._ecTOcamera;\r\n\r\n        XZ.rotation.x = 0;\r\n        XZ.rotation.y = 0;\r\n        XZ.rotation.z = 0;\r\n\r\n        ZY.rotation.x = 0;\r\n        ZY.rotation.y = 0;\r\n        ZY.rotation.z = 0;\r\n\r\n        YX.rotation.x = 0;\r\n        YX.rotation.y = 0;\r\n        YX.rotation.z = 0;\r\n\r\n        if (ec.x <= 0 && ec.y >= 0 && ec.z >= 0) {\r\n            XZ.rotation.z = 3.14;\r\n            YX.rotation.y = 3.14;\r\n        } else if (ec.x <= 0 && ec.y >= 0 && ec.z <= 0) {\r\n            XZ.rotation.y = 3.14;\r\n            ZY.rotation.y = 3.14;\r\n            YX.rotation.y = 3.14;\r\n        } else if (ec.x >= 0 && ec.y >= 0 && ec.z <= 0) {\r\n            XZ.rotation.x = 3.14;\r\n            ZY.rotation.y = 3.14;\r\n        } else if (ec.x >= 0 && ec.y <= 0 && ec.z >= 0) {\r\n            ZY.rotation.z = 3.14;\r\n            YX.rotation.x = 3.14;\r\n        } else if (ec.x <= 0 && ec.y <= 0 && ec.z >= 0) {\r\n            XZ.rotation.z = 3.14;\r\n            ZY.rotation.z = 3.14;\r\n            YX.rotation.z = 3.14;\r\n        } else if (ec.x <= 0 && ec.y <= 0 && ec.z <= 0) {\r\n            XZ.rotation.y = 3.14;\r\n            ZY.rotation.x = 3.14;\r\n            YX.rotation.z = 3.14;\r\n        } else if (ec.x >= 0 && ec.y <= 0 && ec.z <= 0) {\r\n            XZ.rotation.x = 3.14;\r\n            ZY.rotation.x = 3.14;\r\n            YX.rotation.x = 3.14;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public switchTo(mesh: TransformNode, eulerian?: boolean) {\r\n        mesh.computeWorldMatrix(true);\r\n        this._mesh = mesh;\r\n        if (eulerian != null) {\r\n            this._eulerian = eulerian;\r\n        }\r\n        this._checkQuaternion();\r\n        this._setLocalAxes(mesh);\r\n        this._actHist = new ActHist(mesh, 10);\r\n        this._lhsRhs = this._check_LHS_RHS(mesh);\r\n        this.refreshBoundingInfo();\r\n    }\r\n\r\n    public switchCamera(camera: Camera) {\r\n        this._mainCamera = camera;\r\n    }\r\n\r\n    public setUndoCount(c: number) {\r\n        this._actHist.setCapacity(c);\r\n    }\r\n\r\n    public undo() {\r\n        let at: number = this._actHist.undo();\r\n        this._mesh.computeWorldMatrix(true);\r\n        this._setLocalAxes(this._mesh);\r\n        this._callActionStartListener(at);\r\n        this._callActionListener(at);\r\n        this._callActionEndListener(at);\r\n    }\r\n\r\n    public redo() {\r\n        let at: number = this._actHist.redo();\r\n        this._mesh.computeWorldMatrix(true);\r\n        this._setLocalAxes(this._mesh);\r\n        this._callActionStartListener(at);\r\n        this._callActionListener(at);\r\n        this._callActionEndListener(at);\r\n    }\r\n\r\n    /**\r\n     * detach the edit control from the mesh and dispose off all\r\n     * resources created by the edit control\r\n     */\r\n    public detach() {\r\n        this._canvas.removeEventListener(\"pointerdown\", this._pointerdown, false);\r\n        this._canvas.removeEventListener(\"pointerup\", this._pointerup, false);\r\n        this._canvas.removeEventListener(\"pointermove\", this._pointermove, false);\r\n        this._scene.unregisterBeforeRender(this._renderer);\r\n        this.removeAllActionListeners();\r\n        this._disposeAll();\r\n    }\r\n    private _prevState: String = \"\";\r\n    private _hidden: boolean = false;\r\n\r\n    /**\r\n     * hide the edit control. use show() to unhide the control.\r\n     */\r\n    public hide() {\r\n        this._hidden = true;\r\n        if (this._transEnabled) {\r\n            this._prevState = \"T\";\r\n            this.disableTranslation();\r\n        } else if (this._rotEnabled) {\r\n            this._prevState = \"R\";\r\n            this.disableRotation();\r\n        } else if (this._scaleEnabled) {\r\n            this._prevState = \"S\";\r\n            this.disableScaling();\r\n        }\r\n        this._hideCommonAxes();\r\n    }\r\n\r\n    private _hideCommonAxes() {\r\n        this._xaxis.visibility = 0;\r\n        this._yaxis.visibility = 0;\r\n        this._zaxis.visibility = 0;\r\n    }\r\n    private _showCommonAxes() {\r\n        this._xaxis.visibility = this._visibility;\r\n        this._yaxis.visibility = this._visibility;\r\n        this._zaxis.visibility = this._visibility;\r\n    }\r\n    /**\r\n     * unhide the editcontrol hidden using the hide() method\r\n     */\r\n    public show() {\r\n        this._hidden = false;\r\n        this._showCommonAxes();\r\n        if (this._prevState == \"T\") this.enableTranslation();\r\n        else if (this._prevState == \"R\") this.enableRotation();\r\n        else if (this._prevState == \"S\") this.enableScaling();\r\n    }\r\n\r\n    /**\r\n     * check if the editcontrol was hidden using the hide() methods\r\n     */\r\n    public isHidden(): boolean {\r\n        return this._hidden;\r\n    }\r\n\r\n    private _disposeAll() {\r\n        this._ecRoot.dispose();\r\n        this._disposeMaterials();\r\n        this._actHist = null;\r\n    }\r\n\r\n    private _actionListener: (actionType: number) => void = null;\r\n    private _actionStartListener: (actionType: number) => void = null;\r\n    private _actionEndListener: (actionType: number) => void = null;\r\n\r\n    public addActionListener(actionListener: (actionType: number) => void) {\r\n        this._actionListener = actionListener;\r\n    }\r\n    public removeActionListener() {\r\n        this._actionListener = null;\r\n    }\r\n    public addActionStartListener(actionStartListener: (actionType: number) => void) {\r\n        this._actionStartListener = actionStartListener;\r\n    }\r\n    public removeActionStartListener() {\r\n        this._actionStartListener = null;\r\n    }\r\n    public addActionEndListener(actionEndListener: (actionType: number) => void) {\r\n        this._actionEndListener = actionEndListener;\r\n    }\r\n    public removeActionEndListener() {\r\n        this._actionEndListener = null;\r\n    }\r\n\r\n    public removeAllActionListeners() {\r\n        this._actionListener = null;\r\n        this._actionStartListener = null;\r\n        this._actionEndListener = null;\r\n    }\r\n\r\n    private _pDown: boolean = false;\r\n\r\n    private _axisPicked: Mesh;\r\n\r\n    private _onPointerDown(evt: Event) {\r\n        evt.preventDefault();\r\n        this._pDown = true;\r\n        if ((<PointerEvent>evt).button != 0) return;\r\n        let engine: Engine = this._scene.getEngine();\r\n        let x = (engine.isPointerLock) ? this._canvas.width * 0.5 : this._scene.pointerX;\r\n        let y = (engine.isPointerLock) ? this._canvas.height * 0.5 : this._scene.pointerY;\r\n        let pickResult: PickingInfo = this._scene.pick(x, y, (mesh) => {\r\n            if (this._transEnabled) {\r\n                if ((mesh == this._tX) || (mesh == this._tY) || (mesh == this._tZ) || (mesh == this._tXZ) || (mesh == this._tZY) || (mesh == this._tYX) || (mesh == this._tAll)) return true;\r\n            } else if ((this._rotEnabled)) {\r\n                if ((mesh == this._rX) || (mesh == this._rY) || (mesh == this._rZ) || (mesh == this._rAll)) return true;\r\n            } else if ((this._scaleEnabled)) {\r\n                if ((mesh == this._sX) || (mesh == this._sY) || (mesh == this._sZ) || (mesh == this._sXZ) || (mesh == this._sZY) || (mesh == this._sYX) || (mesh == this._sAll)) return true;\r\n            }\r\n            return false;\r\n        }, null, this._mainCamera);\r\n\r\n        if (pickResult.hit) {\r\n            //this.setAxesVisiblity(0);\r\n            this._axisPicked = <Mesh>pickResult.pickedMesh;\r\n            let childs: Node[] = this._axisPicked.getChildren();\r\n            if (childs.length > 0) {\r\n                (<Mesh>childs[0]).visibility = this._visibility;\r\n            } else {\r\n                this._axisPicked.visibility = this._visibility;\r\n            }\r\n            let name: string = this._axisPicked.name;\r\n            if ((name == \"X\")) this._bXaxis.visibility = 1;\r\n            else if ((name == \"Y\")) this._bYaxis.visibility = 1;\r\n            else if ((name == \"Z\")) this._bZaxis.visibility = 1;\r\n            else if ((name == \"XZ\")) {\r\n                this._bXaxis.visibility = 1;\r\n                this._bZaxis.visibility = 1;\r\n            } else if ((name == \"ZY\")) {\r\n                this._bZaxis.visibility = 1;\r\n                this._bYaxis.visibility = 1;\r\n            } else if ((name == \"YX\")) {\r\n                this._bYaxis.visibility = 1;\r\n                this._bXaxis.visibility = 1;\r\n            } else if ((name == \"ALL\")) {\r\n                this._bXaxis.visibility = 1;\r\n                this._bYaxis.visibility = 1;\r\n                this._bZaxis.visibility = 1;\r\n            }\r\n            this._setEditing(true);\r\n            //lets find out where we are on the pickplane\r\n            this._pickedPlane = this._getPickPlane(this._axisPicked);\r\n            if (this._pickedPlane != null) {\r\n                this._prevPos = this._getPosOnPickPlane();\r\n            } else {\r\n                this._prevPos = null;\r\n            }\r\n            window.setTimeout(((cam, can) => { return this._detachCamera(cam, can) }), 0, this._mainCamera, this._canvas);\r\n        }\r\n    }\r\n\r\n    private _setEditing(editing: boolean) {\r\n        this._editing = editing;\r\n        if (editing) {\r\n            this._setActionType();\r\n            if (this._actionType == ActionType.ROT) {\r\n                this._snapRA = 0;\r\n            }\r\n            this._callActionStartListener(this._actionType);\r\n        } else {\r\n            this._callActionEndListener(this._actionType);\r\n        }\r\n    }\r\n\r\n    public isEditing(): boolean {\r\n        return this._editing;\r\n    }\r\n\r\n    /**\r\n     * no camera movement during edit\r\n     */\r\n    private _detachCamera(cam: Object, can: Object) {\r\n        let camera: Camera = <Camera>cam;\r\n        let canvas: HTMLCanvasElement = <HTMLCanvasElement>can;\r\n        let engine: Engine = this._scene.getEngine();\r\n        if (!engine.isPointerLock) {\r\n            camera.detachControl(canvas)\r\n        }\r\n    }\r\n\r\n    private _prevOverMesh: Mesh;\r\n\r\n    private _pointerIsOver: boolean = false;\r\n\r\n    public isPointerOver(): boolean {\r\n        return this._pointerIsOver;\r\n    }\r\n    private _savedMat: Material;\r\n    private _savedCol: Color3;\r\n    private _onPointerOver() {\r\n        //if(this.pDown) return;\r\n        let engine: Engine = this._scene.getEngine();\r\n        let x = (engine.isPointerLock) ? this._canvas.width * 0.5 : this._scene.pointerX;\r\n        let y = (engine.isPointerLock) ? this._canvas.height * 0.5 : this._scene.pointerY;\r\n        let pickResult: PickingInfo = this._scene.pick(x, y, (mesh) => {\r\n            if (this._transEnabled) {\r\n                if ((mesh == this._tX) || (mesh == this._tY) || (mesh == this._tZ) || (mesh == this._tXZ) || (mesh == this._tZY) || (mesh == this._tYX) || (mesh == this._tAll)) return true;\r\n            } else if ((this._rotEnabled)) {\r\n                if ((mesh == this._rX) || (mesh == this._rY) || (mesh == this._rZ) || (mesh == this._rAll)) return true;\r\n            } else if (this._scaleEnabled) {\r\n                if ((mesh == this._sX) || (mesh == this._sY) || (mesh == this._sZ) || (mesh == this._sXZ) || (mesh == this._sZY) || (mesh == this._sYX) || (mesh == this._sAll)) return true;\r\n            }\r\n            return false;\r\n        }, null, this._mainCamera);\r\n        if (pickResult.hit) {\r\n            //if we are still over the same axis mesh then don't do anything\r\n            if (<Mesh>pickResult.pickedMesh != this._prevOverMesh) {\r\n                this._pointerIsOver = true;\r\n                //if we moved directly from one axis mesh to this then clean up the prev axis mesh\r\n                this._clearPrevOverMesh();\r\n                this._prevOverMesh = <Mesh>pickResult.pickedMesh;\r\n                if (this._rotEnabled) {\r\n                    this._savedCol = (<LinesMesh>this._prevOverMesh.getChildren()[0]).color;\r\n                    (<LinesMesh>this._prevOverMesh.getChildren()[0]).color = this._whiteCol;\r\n                } else {\r\n                    let childs: Node[] = this._prevOverMesh.getChildren();\r\n                    if (childs.length > 0) {\r\n                        this._savedMat = (<Mesh>childs[0]).material;\r\n                        (<Mesh>childs[0]).material = this._whiteMat;\r\n                    } else {\r\n                        this._savedMat = this._prevOverMesh.material;\r\n                        this._prevOverMesh.material = this._whiteMat;\r\n                    }\r\n                }\r\n                if (this._prevOverMesh.name == \"X\") {\r\n                    this._xaxis.color = this._whiteCol;\r\n                } else if (this._prevOverMesh.name == \"Y\") {\r\n                    this._yaxis.color = this._whiteCol;\r\n                } else if (this._prevOverMesh.name == \"Z\") {\r\n                    this._zaxis.color = this._whiteCol;\r\n                }\r\n            }\r\n        } else {\r\n            this._pointerIsOver = false;\r\n            if (this._prevOverMesh != null) {\r\n                this._restoreColor(this._prevOverMesh);\r\n                this._prevOverMesh = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    //clean up any axis we might have been howering over before\r\n    private _clearPrevOverMesh() {\r\n        if (this._prevOverMesh != null) {\r\n            this._prevOverMesh.visibility = 0;\r\n            this._restoreColor(this._prevOverMesh);\r\n        }\r\n    }\r\n\r\n    private _restoreColor(mesh: Mesh) {\r\n        switch (mesh.name) {\r\n            case \"X\":\r\n                this._xaxis.color = this._redCol;\r\n                break;\r\n            case \"Y\":\r\n                this._yaxis.color = this._greenCol;\r\n                break;\r\n            case \"Z\":\r\n                this._zaxis.color = this._blueCol;\r\n                break;\r\n        }\r\n\r\n        if (this._rotEnabled) {\r\n            (<LinesMesh>mesh.getChildren()[0]).color = this._savedCol;\r\n        } else {\r\n            let childs: Node[] = mesh.getChildren();\r\n            if (childs.length > 0) {\r\n                (<Mesh>childs[0]).material = this._savedMat;\r\n            } else {\r\n                mesh.material = this._savedMat;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _editing: boolean = false;\r\n\r\n    private _onPointerUp(evt: Event) {\r\n        this._pDown = false;\r\n        if (this._editing) {\r\n            let engine: Engine = this._scene.getEngine();\r\n            if (!engine.isPointerLock) {\r\n                this._mainCamera.attachControl(this._canvas);\r\n            }\r\n            this._setEditing(false);\r\n            //this.setAxesVisiblity(1);\r\n            this._hideBaxis();\r\n            if (this._prevOverMesh != null) {\r\n                this._restoreColor(this._prevOverMesh);\r\n                this._prevOverMesh = null;\r\n            }\r\n            this._actHist.add(this._actionType);\r\n        }\r\n    }\r\n\r\n    private _actionType: number;\r\n    private _setActionType() {\r\n        if (this._transEnabled) {\r\n            this._actionType = ActionType.TRANS;\r\n        } else if ((this._rotEnabled)) {\r\n            this._actionType = ActionType.ROT;\r\n        } else if ((this._scaleEnabled)) {\r\n            this._actionType = ActionType.SCALE;\r\n        }\r\n    }\r\n\r\n    private _callActionListener(at: number) {\r\n        //call actionListener if registered\r\n        if (this._actionListener != null) {\r\n            this._actionListener(at);\r\n        }\r\n\r\n    }\r\n    private _callActionStartListener(at: number) {\r\n        //call actionListener if registered\r\n        if (this._actionStartListener != null) {\r\n            this._actionStartListener(at);\r\n        }\r\n\r\n    }\r\n    private _callActionEndListener(at: number) {\r\n        //call actionListener if registered\r\n        if (this._actionEndListener != null) {\r\n            this._actionEndListener(at);\r\n        }\r\n\r\n    }\r\n\r\n    private _prevPos: Vector3;\r\n    private _onPointerMove(evt: Event) {\r\n\r\n        if (!this._pDown) {\r\n            this._onPointerOver();\r\n            return;\r\n        }\r\n        if (!this._editing) return;\r\n        if (this._prevPos == null) return;\r\n\r\n        let newPos: Vector3 = this._getPosOnPickPlane();\r\n\r\n        if (newPos == null) return;\r\n\r\n        if (this._rotEnabled) {\r\n            this._doRotation(this._mesh, this._axisPicked, newPos, this._prevPos);\r\n        } else {\r\n            let diff: Vector3 = newPos.subtract(this._prevPos);\r\n            if (diff.x == 0 && diff.y == 0 && diff.z == 0) return;\r\n            if (this._transEnabled) {\r\n                this._doTranslation(diff);\r\n            } else {\r\n                if (this._scaleEnabled && this._local) this._doScaling(diff);\r\n            }\r\n        }\r\n        this._prevPos = newPos;\r\n        this._callActionListener(this._actionType);\r\n    }\r\n\r\n\r\n    //rotate differently if camera is too close to the rotation plane\r\n    private _rotate2: boolean = false;\r\n    private _getPickPlane(axis: Mesh): Mesh {\r\n        let n: string = axis.name;\r\n        if (this._transEnabled || this._scaleEnabled) {\r\n            if (n == \"XZ\") return this._pXZ;\r\n            else if (n == \"ZY\") return this._pZY;\r\n            else if (n == \"YX\") return this._pYX;\r\n            else if (n == \"ALL\") return this._pALL;\r\n            else {\r\n                //get the position of camera in the edit control frame of reference\r\n                this._ecRoot.getWorldMatrix().invertToRef(this._ecMatrix);\r\n                Vector3.TransformCoordinatesToRef(this._mainCamera.position, this._ecMatrix, this._ecTOcamera);\r\n                let c = this._ecTOcamera;\r\n                if (n === \"X\") {\r\n                    if (Math.abs(c.y) > Math.abs(c.z)) {\r\n                        return this._pXZ;\r\n                    } else return this._pYX;\r\n                } else if (n === \"Z\") {\r\n                    if (Math.abs(c.y) > Math.abs(c.x)) {\r\n                        return this._pXZ;\r\n                    } else return this._pZY;\r\n                } else if (n === \"Y\") {\r\n                    if (Math.abs(c.z) > Math.abs(c.x)) {\r\n                        return this._pYX;\r\n                    } else return this._pZY;\r\n                }\r\n            }\r\n        } else if (this._rotEnabled) {\r\n            this._rotate2 = false;\r\n            //get the position of camera in the edit control frame of reference\r\n            this._ecRoot.getWorldMatrix().invertToRef(this._ecMatrix);\r\n            Vector3.TransformCoordinatesToRef(this._mainCamera.position, this._ecMatrix, this._ecTOcamera);\r\n            let c = this._ecTOcamera;\r\n            //if camera is too close to the rotation plane then use alternate rotation process\r\n            switch (n) {\r\n                case \"X\":\r\n                    if (Math.abs(c.x) < 0.2) {\r\n                        this._rotate2 = true;\r\n                        return this._pALL;\r\n                    } else return this._pZY;\r\n                case \"Y\":\r\n                    if (Math.abs(c.y) < 0.2) {\r\n                        this._rotate2 = true;\r\n                        return this._pALL;\r\n                    } else return this._pXZ;\r\n                case \"Z\":\r\n                    if (Math.abs(c.z) < 0.2) {\r\n                        this._rotate2 = true;\r\n                        return this._pALL;\r\n                    } else return this._pYX;\r\n                default:\r\n                    return this._pALL;\r\n            }\r\n        } else return null;\r\n    }\r\n\r\n    //TODO when translating, the orientation of pALL keeps changing\r\n    //TODo this is not so with rotation or scaling\r\n    //TODO so for translation instead of pALL maybe we should use the camera view plane for picking\r\n\r\n    private _transBy: Vector3 = new Vector3(0, 0, 0);\r\n    private _doTranslation(diff: Vector3) {\r\n\r\n        if ((this._mesh.parent != null) && this._isScaleUnEqual(this._mesh)) {\r\n            this._setLocalAxes(this._ecRoot);\r\n        } else {\r\n            this._setLocalAxes(this._mesh);\r\n        }\r\n\r\n        let n: string = this._axisPicked.name;\r\n\r\n        this._transBy.x = 0; this._transBy.y = 0; this._transBy.z = 0;\r\n\r\n        if ((n == \"X\") || (n == \"XZ\") || (n == \"YX\") || (n == \"ALL\")) {\r\n            if (this._local) this._transBy.x = Vector3.Dot(diff, this._localX) / this._localX.length();\r\n            else this._transBy.x = diff.x;\r\n        }\r\n        if ((n == \"Y\") || (n == \"ZY\") || (n == \"YX\") || (n == \"ALL\")) {\r\n            if (this._local) this._transBy.y = Vector3.Dot(diff, this._localY) / this._localY.length();\r\n            else this._transBy.y = diff.y;\r\n        }\r\n        if ((n == \"Z\") || (n == \"XZ\") || (n == \"ZY\") || (n == \"ALL\")) {\r\n            if (this._local) this._transBy.z = Vector3.Dot(diff, this._localZ) / this._localZ.length();\r\n            else this._transBy.z = diff.z;\r\n        }\r\n\r\n        this._transWithSnap(this._mesh, this._transBy, this._local);\r\n\r\n        // bound the translation\r\n        if (this._transBoundsMin) {\r\n            this._mesh.position.x = Math.max(this._mesh.position.x, this._transBoundsMin.x);\r\n            this._mesh.position.y = Math.max(this._mesh.position.y, this._transBoundsMin.y);\r\n            this._mesh.position.z = Math.max(this._mesh.position.z, this._transBoundsMin.z);\r\n        }\r\n        if (this._transBoundsMax) {\r\n            this._mesh.position.x = Math.min(this._mesh.position.x, this._transBoundsMax.x);\r\n            this._mesh.position.y = Math.min(this._mesh.position.y, this._transBoundsMax.y);\r\n            this._mesh.position.z = Math.min(this._mesh.position.z, this._transBoundsMax.z);\r\n        }\r\n\r\n        this._mesh.computeWorldMatrix(true);\r\n    }\r\n\r\n    private _snapTV: Vector3 = new Vector3(0, 0, 0);\r\n    private _transWithSnap(mesh: TransformNode, trans: Vector3, local: boolean) {\r\n        if (this._snapT) {\r\n            let snapit: boolean = false;\r\n            this._snapTV.addInPlace(trans);\r\n            if (Math.abs(this._snapTV.x) > this._tSnap.x) {\r\n                if (this._snapTV.x > 0) trans.x = this._tSnap.x; else trans.x = -this._tSnap.x;\r\n                snapit = true;\r\n            }\r\n            if (Math.abs(this._snapTV.y) > this._tSnap.y) {\r\n                if (this._snapTV.y > 0) trans.y = this._tSnap.y; else trans.y = -this._tSnap.y;\r\n                snapit = true;\r\n            }\r\n            if (Math.abs(this._snapTV.z) > this._tSnap.z) {\r\n                if (this._snapTV.z > 0) trans.z = this._tSnap.z; else trans.z = -this._tSnap.z;\r\n                snapit = true;\r\n            }\r\n            if (snapit) {\r\n                if (Math.abs(trans.x) !== this._tSnap.x) trans.x = 0;\r\n                if (Math.abs(trans.y) !== this._tSnap.y) trans.y = 0;\r\n                if (Math.abs(trans.z) !== this._tSnap.z) trans.z = 0;\r\n                Vector3.FromFloatsToRef(0, 0, 0, this._snapTV);\r\n                snapit = false;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (local) {\r\n            //locallyTranslate moves the mesh wrt the absolute location not pivotlocation :(\r\n            //this.mesh.locallyTranslate(trans);\r\n            //\r\n            this._localX.normalizeToRef(this._tv1);\r\n            this._localY.normalizeToRef(this._tv2);\r\n            this._localZ.normalizeToRef(this._tv3);\r\n            this._mesh.translate(this._tv1, trans.x, Space.WORLD);\r\n            this._mesh.translate(this._tv2, trans.y, Space.WORLD);\r\n            this._mesh.translate(this._tv3, trans.z, Space.WORLD);\r\n        } else {\r\n            if (this._mesh.parent == null) {\r\n                this._mesh.position.addInPlace(trans);\r\n            } else {\r\n                this._mesh.setAbsolutePosition(trans.addInPlace(this._mesh.absolutePosition));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private _snapS: boolean = false;\r\n    private _snapSV: Vector3 = new Vector3(0, 0, 0);\r\n    private _scaleSnap: number = 0.25;\r\n    private _scale: Vector3 = new Vector3(0, 0, 0);\r\n    private _doScaling(diff: Vector3) {\r\n        this._setLocalAxes(this._mesh);\r\n\r\n        this._scale.x = 0;\r\n        this._scale.y = 0;\r\n        this._scale.z = 0;\r\n        let n: string = this._axisPicked.name;\r\n        if ((n == \"X\") || (n == \"XZ\") || (n == \"YX\")) {\r\n            this._scale.x = Vector3.Dot(diff, this._localX) / this._localX.length();\r\n            if (this._mesh.scaling.x < 0) this._scale.x = -this._scale.x;\r\n            //if(this.lhsRhs) this.scale.x=-this.scale.x;\r\n        }\r\n        if ((n == \"Y\") || (n == \"ZY\") || (n == \"YX\")) {\r\n            this._scale.y = Vector3.Dot(diff, this._localY) / this._localY.length();\r\n            if (this._mesh.scaling.y < 0) this._scale.y = -this._scale.y;\r\n        }\r\n        if ((n == \"Z\") || (n == \"XZ\") || (n == \"ZY\")) {\r\n            this._scale.z = Vector3.Dot(diff, this._localZ) / this._localZ.length();\r\n            if (this._mesh.scaling.z < 0) this._scale.z = -this._scale.z;\r\n        }\r\n\r\n        //as the mesh becomes large reduce the amount by which we scale.\r\n        let bbd = this._boundingDimesion;\r\n        this._scale.x = this._scale.x / bbd.x;\r\n        this._scale.y = this._scale.y / bbd.y;\r\n        this._scale.z = this._scale.z / bbd.z;\r\n\r\n        if (n == \"ALL\") {\r\n            //project movement along camera up vector\r\n            //if up then scale up else scale down\r\n            let s: number = Vector3.Dot(diff, this._mainCamera.upVector);\r\n            s = s / Math.max(bbd.x, bbd.y, bbd.z);\r\n            this._scale.copyFromFloats(s, s, s);\r\n        } else {\r\n            let inPlane: boolean = false;\r\n            if (n == \"XZ\") {\r\n                inPlane = true;\r\n                if (Math.abs(this._scale.x) > Math.abs(this._scale.z)) {\r\n                    this._scale.z = this._scale.x;\r\n                } else this._scale.x = this._scale.z;\r\n            } else if (n == \"ZY\") {\r\n                inPlane = true;\r\n                if (Math.abs(this._scale.z) > Math.abs(this._scale.y)) {\r\n                    this._scale.y = this._scale.z;\r\n                } else this._scale.z = this._scale.y;\r\n            } else if (n == \"YX\") {\r\n                inPlane = true;\r\n                if (Math.abs(this._scale.y) > Math.abs(this._scale.x)) {\r\n                    this._scale.x = this._scale.y;\r\n                } else this._scale.y = this._scale.x;\r\n            }\r\n            if (inPlane) {\r\n                //check if the mouse/pointer was moved towards camera or away from camera\r\n                //if towards then scale up else scale down\r\n                this._ecRoot.position.subtractToRef(this._mainCamera.position, this._cameraTOec);\r\n                let s: number = Vector3.Dot(diff, this._cameraTOec);\r\n                this._scale.x = Math.abs(this._scale.x);\r\n                this._scale.y = Math.abs(this._scale.y);\r\n                this._scale.z = Math.abs(this._scale.z);\r\n                if (s > 0) {\r\n                    if (this._mesh.scaling.x > 0) this._scale.x = -this._scale.x;\r\n                    //if(this.lhsRhs) this.scale.y=Math.abs(this.scale.y);\r\n                    if (this._mesh.scaling.y > 0) this._scale.y = -this._scale.y;\r\n                    if (this._mesh.scaling.z > 0) this._scale.z = -this._scale.z;\r\n                } else {\r\n                    //this.scale.x=Math.abs(this.scale.x);\r\n                    //if(this.lhsRhs) this.scale.y=-Math.abs(this.scale.y);\r\n                    //else this.scale.y=Math.abs(this.scale.y);\r\n                    if (this._mesh.scaling.x < 0) this._scale.x = -this._scale.x;\r\n                    if (this._mesh.scaling.y < 0) this._scale.y = -this._scale.y;\r\n                    if (this._mesh.scaling.z < 0) this._scale.z = -this._scale.z;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this._scaleWithSnap(this._mesh, this._scale);\r\n\r\n        // bound the scale\r\n        if (this._scaleBoundsMin) {\r\n            this._mesh.scaling.x = Math.max(this._mesh.scaling.x, this._scaleBoundsMin.x);\r\n            this._mesh.scaling.y = Math.max(this._mesh.scaling.y, this._scaleBoundsMin.y);\r\n            this._mesh.scaling.z = Math.max(this._mesh.scaling.z, this._scaleBoundsMin.z);\r\n        }\r\n        if (this._scaleBoundsMax) {\r\n            this._mesh.scaling.x = Math.min(this._mesh.scaling.x, this._scaleBoundsMax.x);\r\n            this._mesh.scaling.y = Math.min(this._mesh.scaling.y, this._scaleBoundsMax.y);\r\n            this._mesh.scaling.z = Math.min(this._mesh.scaling.z, this._scaleBoundsMax.z);\r\n        }\r\n\r\n    }\r\n\r\n    private _scaleWithSnap(mesh: TransformNode, p: Vector3) {\r\n        if (this._snapS) {\r\n            let snapit: boolean = false;\r\n            this._snapSV.addInPlace(p);\r\n            if (Math.abs(this._snapSV.x) > this._scaleSnap) {\r\n                if (p.x > 0) p.x = this._scaleSnap; else p.x = -this._scaleSnap;\r\n                snapit = true;\r\n            }\r\n            if (Math.abs(this._snapSV.y) > this._scaleSnap) {\r\n                if (p.y > 0) p.y = this._scaleSnap; else p.y = -this._scaleSnap;\r\n                snapit = true;\r\n            }\r\n            if (Math.abs(this._snapSV.z) > this._scaleSnap) {\r\n                if (p.z > 0) p.z = this._scaleSnap; else p.z = -this._scaleSnap;\r\n                snapit = true;\r\n            }\r\n            if (!snapit) return;\r\n            if ((Math.abs(p.x) !== this._scaleSnap) && (p.x !== 0)) p.x = 0;\r\n            if ((Math.abs(p.y) !== this._scaleSnap) && (p.y !== 0)) p.y = 0;\r\n            if ((Math.abs(p.z) !== this._scaleSnap) && (p.z !== 0)) p.z = 0;\r\n            Vector3.FromFloatsToRef(0, 0, 0, this._snapSV);\r\n            snapit = false;\r\n        }\r\n        mesh.scaling.addInPlace(p);\r\n\r\n    }\r\n\r\n    private _localX: Vector3 = new Vector3(0, 0, 0);\r\n    private _localY: Vector3 = new Vector3(0, 0, 0);\r\n    private _localZ: Vector3 = new Vector3(0, 0, 0);\r\n\r\n    /*\r\n     * This would be called after rotation or scaling as the local axes direction or length might have changed\r\n     * We need to set the local axis as these are used in all three modes to figure out \r\n     * direction of mouse move wrt the axes\r\n     * TODO should use world pivotmatrix instead of worldmatrix - incase pivot axes were rotated?\r\n     */\r\n    private _setLocalAxes(mesh: Node) {\r\n        let meshMatrix: Matrix = mesh.getWorldMatrix();\r\n        Vector3.FromFloatArrayToRef(meshMatrix.m, 0, this._localX);\r\n        Vector3.FromFloatArrayToRef(meshMatrix.m, 4, this._localY);\r\n        Vector3.FromFloatArrayToRef(meshMatrix.m, 8, this._localZ);\r\n    }\r\n\r\n\r\n    /*\r\n     * boundingDimesion is used by scaling to adjust rate at which a mesh is scaled\r\n     * with respect to mouse movement.\r\n     *\r\n     */\r\n    private _boundingDimesion: Vector3;\r\n    private _getBoundingDimension(mesh: TransformNode): Vector3 {\r\n        if (mesh instanceof AbstractMesh) {\r\n            { } let bb: BoundingBox = mesh.getBoundingInfo().boundingBox;\r\n            let bd: Vector3 = bb.maximum.subtract(bb.minimum);\r\n            if (bd.x == 0) bd.x = 1;\r\n            if (bd.y == 0) bd.y = 1;\r\n            if (bd.z == 0) bd.z = 1;\r\n            return bd;\r\n        } else return new Vector3(1, 1, 1);\r\n    }\r\n\r\n    /*\r\n     *\r\n     * For the sake of speed the editcontrol calculates bounding info only once.\r\n     * This is in the constructor.\r\n     * Now The boundingbox dimension can change if the mesh is baked.\r\n     * If the editcontrol is attached to the mesh when the mesh was baked then\r\n     * the scaling speed will be incorrect.\r\n     * Thus client application should call refreshBoundingInfo if it bakes the mesh.\r\n     *\r\n     */\r\n    public refreshBoundingInfo() {\r\n        this._boundingDimesion = this._getBoundingDimension(this._mesh);\r\n    }\r\n\r\n    private _eulerian: boolean = false;\r\n    private _snapRA: number = 0;\r\n    private _doRotation(mesh: TransformNode, axis: Mesh, newPos: Vector3, prevPos: Vector3) {\r\n\r\n        //for now no rotation if parents have non uniform scale\r\n        if (this._local && (this._mesh.parent != null) && this._isScaleUnEqual(mesh)) {\r\n            this._setLocalAxes(this._ecRoot);\r\n        } else {\r\n            this._setLocalAxes(mesh);\r\n        }\r\n\r\n        let angle: number = 0;\r\n\r\n        //rotation axis\r\n        let rAxis: Vector3;\r\n        if (axis == this._rX) rAxis = this._local ? this._localX : Axis.X;\r\n        else if (axis == this._rY) rAxis = this._local ? this._localY : Axis.Y;\r\n        else if (axis == this._rZ) rAxis = this._local ? this._localZ : Axis.Z;\r\n\r\n        this._ecRoot.position.subtractToRef(this._mainCamera.position, this._cameraTOec);\r\n\r\n        /**\r\n         * A)first find the angle and the direction (clockwise or anticlockwise) by which the user was trying to rotate\r\n         * from the user(camera) perspective\r\n         */\r\n        if (this._rotate2) {\r\n            angle = this._getAngle2(prevPos, newPos, this._mainCamera.position, this._cameraTOec, rAxis);\r\n            //TODO check why we need to handle righ hand this way\r\n            if (this._scene.useRightHandedSystem) angle = -angle;\r\n        } else {\r\n            angle = this._getAngle(prevPos, newPos, mesh.getAbsolutePivotPoint(), this._cameraTOec);\r\n        }\r\n\r\n        if (this._lhsRhs) {\r\n            angle = -angle;\r\n        }\r\n        /**\r\n         * B)then rotate based on users(camera) postion and orientation in the local/world space\r\n         * \r\n         */\r\n\r\n        if (this._snapR) {\r\n            this._snapRA += angle;\r\n            angle = 0;\r\n            if (Math.abs(this._snapRA) >= this._rotSnap) {\r\n                if (this._snapRA > 0) angle = this._rotSnap; else angle = -this._rotSnap;\r\n                this._snapRA = 0;\r\n            }\r\n        }\r\n\r\n        if (angle !== 0) {\r\n            this._cameraTOec.normalize();\r\n            if (axis == this._rAll) {\r\n                mesh.rotate(this._cameraTOec, -angle, Space.WORLD);\r\n            } else {\r\n                if (Vector3.Dot(rAxis, this._cameraTOec) >= 0) angle = -angle;\r\n                mesh.rotate(rAxis, angle, Space.WORLD);\r\n            }\r\n\r\n            if (this._eulerian) {\r\n                mesh.rotation = mesh.rotationQuaternion.toEulerAngles();\r\n                mesh.rotationQuaternion = null;\r\n            }\r\n\r\n            if (this._local) {\r\n                if (this._lhsRhs) {\r\n                    angle = -angle;\r\n                }\r\n                if ((this._mesh.parent != null) && this._isScaleUnEqual(mesh)) {\r\n                    if (axis == this._rAll) {\r\n                        this._ecRoot.rotate(this._cameraTOec, -angle, Space.WORLD);\r\n                    } else {\r\n                        this._ecRoot.rotate(rAxis, angle, Space.WORLD);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getPosOnPickPlane(): Vector3 {\r\n        let engine: Engine = this._scene.getEngine();\r\n        let x = (engine.isPointerLock) ? this._canvas.width * 0.5 : this._scene.pointerX;\r\n        let y = (engine.isPointerLock) ? this._canvas.height * 0.5 : this._scene.pointerY;\r\n        let pickinfo: PickingInfo = this._scene.pick(x, y, (mesh) => {\r\n            return mesh == this._pickedPlane;\r\n        }, null, this._mainCamera);\r\n\r\n        if (pickinfo.hit) {\r\n            return pickinfo.pickedPoint;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _hideBaxis() {\r\n        this._bXaxis.visibility = 0;\r\n        this._bYaxis.visibility = 0;\r\n        this._bZaxis.visibility = 0;\r\n    }\r\n\r\n    //    private _setAxesVisiblity(v: number) {\r\n    //        if (this._transEnabled) {\r\n    //            this._tEndX.visibility = v;\r\n    //            this._tEndY.visibility = v;\r\n    //            this._tEndZ.visibility = v;\r\n    //            this._tEndXZ.visibility = v;\r\n    //            this._tEndZY.visibility = v;\r\n    //            this._tEndYX.visibility = v;\r\n    //            this._tEndAll.visibility = v;\r\n    //        }\r\n    //        if (this._rotEnabled) {\r\n    //            this._rEndX.visibility = v;\r\n    //            this._rEndY.visibility = v;\r\n    //            this._rEndZ.visibility = v;\r\n    //            this._rEndAll.visibility = v;\r\n    //        }\r\n    //        if (this._scaleEnabled) {\r\n    //            this._sEndX.visibility = v;\r\n    //            this._sEndY.visibility = v;\r\n    //            this._sEndZ.visibility = v;\r\n    //            this._sEndXZ.visibility = v;\r\n    //            this._sEndZY.visibility = v;\r\n    //            this._sEndYX.visibility = v;\r\n    //            this._sEndAll.visibility = v;\r\n    //        }\r\n    //    }\r\n\r\n    public getRotationQuaternion(): Quaternion {\r\n        return this._ecRoot.rotationQuaternion\r\n    }\r\n\r\n    public getPosition(): Vector3 {\r\n        return this._ecRoot.position;\r\n    }\r\n\r\n    private _transEnabled: boolean = false;\r\n\r\n    public isTranslationEnabled(): boolean {\r\n        return this._transEnabled;\r\n    }\r\n\r\n    public enableTranslation() {\r\n        if (this._hidden) return;\r\n        if (this._tX == null) {\r\n            this._createTransAxes();\r\n            this._tCtl.parent = this._ecRoot;\r\n        }\r\n        this._clearPrevOverMesh();\r\n        if (!this._transEnabled) {\r\n            this._setVisibility(this._all_tEnd, this._visibility);\r\n            this._transEnabled = true;\r\n            this.disableRotation();\r\n            this.disableScaling();\r\n        }\r\n    }\r\n\r\n    public disableTranslation() {\r\n        if (this._transEnabled) {\r\n            this._setVisibility(this._all_tEnd, 0);\r\n            this._transEnabled = false;\r\n        }\r\n    }\r\n\r\n    private _rotEnabled: boolean = false;\r\n\r\n    public isRotationEnabled(): boolean {\r\n        return this._rotEnabled;\r\n    }\r\n\r\n    public returnEuler(euler: boolean) {\r\n        this._eulerian = euler;\r\n    }\r\n\r\n    public enableRotation() {\r\n        if (this._hidden) return;\r\n        if (this._rCtl == null) {\r\n            this._createRotAxes();\r\n            this._rCtl.parent = this._ecRoot;\r\n        }\r\n        this._clearPrevOverMesh();\r\n        if (!this._rotEnabled) {\r\n            this._setVisibility(this._all_rEnd, this._visibility);\r\n            this._rotEnabled = true;\r\n            this.disableTranslation();\r\n            this.disableScaling();\r\n        }\r\n    }\r\n\r\n    public disableRotation() {\r\n        if (this._rotEnabled) {\r\n            this._setVisibility(this._all_rEnd, 0);\r\n            this._rotEnabled = false;\r\n        }\r\n    }\r\n\r\n    private _scaleEnabled: boolean = false;\r\n\r\n    public isScalingEnabled(): boolean {\r\n        return this._scaleEnabled;\r\n    }\r\n\r\n    public enableScaling() {\r\n        if (this._hidden) return;\r\n        if (this._sX == null) {\r\n            this._createScaleAxes();\r\n            this._sCtl.parent = this._ecRoot;\r\n        }\r\n        this._clearPrevOverMesh();\r\n        if (!this._scaleEnabled) {\r\n            this._setVisibility(this._all_sEnd, this._visibility);\r\n            this._scaleEnabled = true;\r\n            this.disableTranslation();\r\n            this.disableRotation();\r\n        }\r\n    }\r\n\r\n    public disableScaling() {\r\n        if (this._scaleEnabled) {\r\n            this._setVisibility(this._all_sEnd, 0);\r\n            this._scaleEnabled = false;\r\n        }\r\n    }\r\n\r\n    private _scaleBoundsMin: Vector3;\r\n    private _scaleBoundsMax: Vector3;\r\n\r\n    public setScaleBounds(min?: Vector3, max?: Vector3) {\r\n        this._scaleBoundsMin = min ? min : null;\r\n        this._scaleBoundsMax = max ? max : null;\r\n        if (this._scaleBoundsMin != null) {\r\n            if (this._scaleBoundsMin.x == 0) this._scaleBoundsMin.x = 0.00000001;\r\n            if (this._scaleBoundsMin.y == 0) this._scaleBoundsMin.y = 0.00000001;\r\n            if (this._scaleBoundsMin.z == 0) this._scaleBoundsMin.z = 0.00000001;\r\n        }\r\n    }\r\n\r\n    public removeScaleBounds() {\r\n        this._scaleBoundsMin = null;\r\n        this._scaleBoundsMax = null;\r\n    }\r\n\r\n\r\n    private _transBoundsMin: Vector3;\r\n    private _transBoundsMax: Vector3;\r\n\r\n    public setTransBounds(min?: Vector3, max?: Vector3) {\r\n        this._transBoundsMin = min ? min : null;\r\n        this._transBoundsMax = max ? max : null;\r\n    }\r\n\r\n    public removeTransBounds() {\r\n        this._transBoundsMin = null;\r\n        this._transBoundsMax = null;\r\n    }\r\n\r\n    private _rotBoundsMin: Vector3;\r\n    private _rotBoundsMax: Vector3;\r\n\r\n    public setRotBounds(min?: Vector3, max?: Vector3) {\r\n        this._rotBoundsMin = min ? min : null;\r\n        this._rotBoundsMax = max ? max : null;\r\n    }\r\n\r\n    public removeRotBounds() {\r\n        this._rotBoundsMin = null;\r\n        this._rotBoundsMax = null;\r\n    }\r\n\r\n    private _bXaxis: LinesMesh;\r\n    private _bYaxis: LinesMesh;\r\n    private _bZaxis: LinesMesh;\r\n    private _xaxis: LinesMesh;\r\n    private _yaxis: LinesMesh;\r\n    private _zaxis: LinesMesh;\r\n\r\n\r\n    /*\r\n     * create big and small axeses which will be shown in translate, rotate and scale mode.\r\n     *\r\n     */\r\n    private _createCommonAxes(): Mesh {\r\n\r\n        let guideAxes: Mesh = new Mesh(\"\", this._scene);\r\n\r\n        //the big axes, shown when an axis is selected\r\n        this._bXaxis = Mesh.CreateLines(\"\", [new Vector3(-100, 0, 0), new Vector3(100, 0, 0)], this._scene);\r\n        this._bYaxis = Mesh.CreateLines(\"\", [new Vector3(0, -100, 0), new Vector3(0, 100, 0)], this._scene);\r\n        this._bZaxis = Mesh.CreateLines(\"\", [new Vector3(0, 0, -100), new Vector3(0, 0, 100)], this._scene);\r\n\r\n        //lines are now pickable too\r\n        this._bXaxis.isPickable = false;\r\n        this._bYaxis.isPickable = false;\r\n        this._bZaxis.isPickable = false;\r\n\r\n        this._bXaxis.parent = guideAxes;\r\n        this._bYaxis.parent = guideAxes;\r\n        this._bZaxis.parent = guideAxes;\r\n        this._bXaxis.color = this._redCol;\r\n        this._bYaxis.color = this._greenCol\r\n        this._bZaxis.color = this._blueCol\r\n        this._hideBaxis();\r\n\r\n        //the small axis\r\n        let al: number = this._axesLen * this._axesScale * 0.75;\r\n        this._xaxis = Mesh.CreateLines(\"\", [new Vector3(0, 0, 0), new Vector3(al, 0, 0)], this._scene);\r\n        this._yaxis = Mesh.CreateLines(\"\", [new Vector3(0, 0, 0), new Vector3(0, al, 0)], this._scene);\r\n        this._zaxis = Mesh.CreateLines(\"\", [new Vector3(0, 0, 0), new Vector3(0, 0, al)], this._scene);\r\n\r\n        //lines are now pickable too\r\n        this._xaxis.isPickable = false;\r\n        this._yaxis.isPickable = false;\r\n        this._zaxis.isPickable = false;\r\n\r\n        this._xaxis.parent = guideAxes;\r\n        this._yaxis.parent = guideAxes;\r\n        this._zaxis.parent = guideAxes;\r\n        this._xaxis.color = this._redCol;\r\n        this._yaxis.color = this._greenCol;\r\n        this._zaxis.color = this._blueCol;\r\n\r\n        this._xaxis.renderingGroupId = 1;\r\n        this._yaxis.renderingGroupId = 1;\r\n        this._zaxis.renderingGroupId = 1;\r\n\r\n        return guideAxes;\r\n    }\r\n\r\n    private _pickedPlane: Mesh;\r\n    private _pALL: Mesh;\r\n    private _pXZ: Mesh;\r\n    private _pZY: Mesh;\r\n    private _pYX: Mesh;\r\n\r\n    private _createPickPlanes() {\r\n        this._pALL = Mesh.CreatePlane(\"\", 5, this._scene);\r\n        this._pXZ = Mesh.CreatePlane(\"\", 5, this._scene);\r\n        this._pZY = Mesh.CreatePlane(\"\", 5, this._scene);\r\n        this._pYX = Mesh.CreatePlane(\"\", 5, this._scene);\r\n\r\n        this._pALL.isPickable = false;\r\n        this._pXZ.isPickable = false;\r\n        this._pZY.isPickable = false;\r\n        this._pYX.isPickable = false;\r\n\r\n        this._pALL.visibility = 0;\r\n        this._pXZ.visibility = 0;\r\n        this._pZY.visibility = 0;\r\n        this._pYX.visibility = 0;\r\n\r\n        this._pALL.renderingGroupId = 1;\r\n        this._pXZ.renderingGroupId = 1;\r\n        this._pZY.renderingGroupId = 1;\r\n        this._pYX.renderingGroupId = 1;\r\n\r\n        this._pALL.lookAt(this._mainCamera.position);\r\n        this._pXZ.rotate(Axis.X, 1.57);\r\n        this._pZY.rotate(Axis.Y, 1.57);\r\n\r\n        let pickPlanes: Mesh = new Mesh(\"\", this._scene);\r\n        this._pALL.parent = pickPlanes;\r\n        this._pXZ.parent = pickPlanes;\r\n        this._pZY.parent = pickPlanes;\r\n        this._pYX.parent = pickPlanes;\r\n\r\n        return pickPlanes;\r\n\r\n\r\n    }\r\n\r\n    private _tCtl: Mesh;\r\n\r\n    private _tX: Mesh;\r\n    private _tY: Mesh;\r\n    private _tZ: Mesh;\r\n    private _tXZ: Mesh;\r\n    private _tZY: Mesh;\r\n    private _tYX: Mesh;\r\n    private _tAll: Mesh;\r\n    private _all_t: Mesh[];\r\n\r\n    private _tEndX: Mesh;\r\n    private _tEndY: Mesh;\r\n    private _tEndZ: Mesh;\r\n    private _tEndXZ: Mesh;\r\n    private _tEndZY: Mesh;\r\n    private _tEndYX: Mesh;\r\n    private _tEndAll: Mesh;\r\n\r\n    private _all_tEnd: Mesh[];\r\n\r\n    private _createTransAxes() {\r\n        let r: number = this._pickWidth * 2 * this._axesScale;\r\n        let l: number = this._axesLen * this._axesScale;\r\n\r\n        this._tCtl = new Mesh(\"\", this._scene);\r\n\r\n        /*pickable invisible boxes around axes lines*/\r\n        this._createPickableTrans(r, l, this._tCtl, this._scene);\r\n\r\n        //non pickable but visible cones at end of axes lines\r\n        this._createNonPickableTrans(r, l, this._scene);\r\n    }\r\n\r\n    private _createPickableTrans(r: number, l: number, tCtl: Mesh, scene: Scene) {\r\n        let tX = this._extrudeBox(r / 2, l);\r\n        tX.name = \"X\";\r\n        let tY = tX.clone(\"Y\");\r\n        let tZ = tX.clone(\"Z\");\r\n\r\n        let tXZ = MeshBuilder.CreatePlane(\"XZ\", { size: r * 2 }, scene);\r\n        let tZY = MeshBuilder.CreatePlane(\"ZY\", { size: r * 2 }, scene);\r\n        let tYX = MeshBuilder.CreatePlane(\"YX\", { size: r * 2 }, scene);\r\n\r\n        tXZ.rotation.x = 1.57;\r\n        tZY.rotation.y = -1.57;\r\n\r\n        tXZ.position.x = 2 * r;\r\n        tXZ.position.z = 2 * r;\r\n\r\n        tZY.position.z = 2 * r;\r\n        tZY.position.y = 2 * r;\r\n\r\n        tYX.position.y = 2 * r;\r\n        tYX.position.x = 2 * r;\r\n\r\n        tXZ.bakeCurrentTransformIntoVertices();\r\n        tZY.bakeCurrentTransformIntoVertices();\r\n        tYX.bakeCurrentTransformIntoVertices();\r\n\r\n        let tAll = Mesh.CreateBox(\"ALL\", r * 2, scene);\r\n\r\n        tX.parent = tCtl;\r\n        tY.parent = tCtl;\r\n        tZ.parent = tCtl;\r\n        tXZ.parent = tCtl;\r\n        tZY.parent = tCtl;\r\n        tYX.parent = tCtl;\r\n        tAll.parent = tCtl;\r\n\r\n        tX.rotation.y = 1.57;\r\n        tY.rotation.x -= 1.57;\r\n\r\n        this._tX = tX;\r\n        this._tY = tY;\r\n        this._tZ = tZ;\r\n        this._tXZ = tXZ;\r\n        this._tZY = tZY;\r\n        this._tYX = tYX;\r\n        this._tAll = tAll;\r\n        this._all_t = [tX, tY, tZ, tXZ, tZY, tYX, tAll]\r\n\r\n        this._setVisibility(this._all_t, 0);\r\n        //do not want clients picking this\r\n        //we will pick using mesh filter in scene.pick function\r\n        this._setPickableFalse(this._all_t)\r\n    }\r\n\r\n    private _createNonPickableTrans(r: number, l: number, scene: Scene) {\r\n        //cone length\r\n        let cl: number = l / 5;\r\n        //cone base radius\r\n        //let cr: number = r;\r\n        let tEndX = Mesh.CreateCylinder(\"\", cl, 0, r, 6, 1, scene);\r\n        let tEndY = tEndX.clone(\"\");\r\n        let tEndZ = tEndX.clone(\"\");\r\n\r\n\r\n        let s = r * 2\r\n        let tEndXZ = MeshBuilder.CreatePlane(\"XZ\", { size: s }, scene);\r\n        let tEndZY = MeshBuilder.CreatePlane(\"ZY\", { size: s }, scene);\r\n        let tEndYX = MeshBuilder.CreatePlane(\"YX\", { size: s }, scene);\r\n\r\n        let tEndAll = Mesh.CreateBox(\"ALL\", r, scene);\r\n\r\n        tEndX.rotation.x = 1.57;\r\n        tEndY.rotation.x = 1.57;\r\n        tEndZ.rotation.x = 1.57;\r\n\r\n        tEndXZ.rotation.x = 1.57;\r\n        tEndZY.rotation.y = 1.57;\r\n        //tEndYX.rotation.x = 0;\r\n\r\n        tEndXZ.position.x = s;\r\n        tEndXZ.position.z = s;\r\n\r\n        tEndZY.position.z = s;\r\n        tEndZY.position.y = s;\r\n\r\n        tEndYX.position.y = s;\r\n        tEndYX.position.x = s;\r\n\r\n        tEndX.parent = this._tX;\r\n        tEndY.parent = this._tY;\r\n        tEndZ.parent = this._tZ;\r\n        tEndXZ.parent = this._tXZ;\r\n        tEndZY.parent = this._tZY;\r\n        tEndYX.parent = this._tYX;\r\n        tEndAll.parent = this._tAll;\r\n\r\n        tEndX.position.z = l - cl / 2;\r\n        tEndY.position.z = l - cl / 2;\r\n        tEndZ.position.z = l - cl / 2;\r\n\r\n        tEndX.material = this._redMat;\r\n        tEndY.material = this._greenMat;\r\n        tEndZ.material = this._blueMat;\r\n        tEndXZ.material = this._greenMat;\r\n        tEndZY.material = this._redMat;\r\n        tEndYX.material = this._blueMat;\r\n        tEndAll.material = this._yellowMat;\r\n\r\n        this._tEndX = tEndX;\r\n        this._tEndY = tEndY;\r\n        this._tEndZ = tEndZ;\r\n        this._tEndXZ = tEndXZ;\r\n        this._tEndZY = tEndZY;\r\n        this._tEndYX = tEndYX;\r\n        this._tEndAll = tEndAll;\r\n        this._all_tEnd = [tEndX, tEndY, tEndZ, tEndXZ, tEndZY, tEndYX, tEndAll];\r\n\r\n        this._setPickableFalse(this._all_tEnd);\r\n        this._setRenderingGroup(this._all_tEnd);\r\n    }\r\n\r\n\r\n\r\n    private _rCtl: Mesh;\r\n\r\n    private _rX: Mesh;\r\n    private _rY: Mesh;\r\n    private _rZ: Mesh;\r\n    private _rAll: Mesh;\r\n    private _all_r: Mesh[];\r\n\r\n    private _rEndX: LinesMesh;\r\n    private _rEndY: LinesMesh;\r\n    private _rEndZ: LinesMesh;\r\n    private _rEndAll: LinesMesh;\r\n    private _rEndAll2: LinesMesh;\r\n    private _all_rEnd: Mesh[];\r\n\r\n\r\n    private _guideSize: number = 180;\r\n\r\n    public setRotGuideFull(y: boolean) {\r\n        if (y) this._guideSize = 360;\r\n        else this._guideSize = 180;\r\n        if (this._rCtl != null) {\r\n            this._rCtl.dispose();\r\n            this._rAll.dispose();\r\n            this._rCtl = null;\r\n            this.enableRotation();\r\n        }\r\n    }\r\n\r\n    private _createRotAxes() {\r\n        let d: number = this._axesLen * this._axesScale * 2;\r\n        this._rCtl = new Mesh(\"\", this._scene);\r\n\r\n        //pickable invisible torus around the rotation circles\r\n        this._createPickableRot(d, this._rCtl);\r\n\r\n        /*non pickable but visible circles */\r\n        this._createNonPickableRot(d);\r\n\r\n    }\r\n\r\n    private _createPickableRot(d: number, rCtl: Mesh) {\r\n        let rX = this._createTube(d / 2, this._guideSize);\r\n        let rY = this._createTube(d / 2, this._guideSize);\r\n        let rZ = this._createTube(d / 2, this._guideSize);\r\n        let rAll = this._createTube(d / 1.75, 360);\r\n        rX.name = \"X\";\r\n        rY.name = \"Y\";\r\n        rZ.name = \"Z\";\r\n        rAll.name = \"ALL\";\r\n\r\n        rX.rotation.z = 1.57;\r\n        rZ.rotation.x = -1.57;\r\n        rX.bakeCurrentTransformIntoVertices();\r\n        rZ.bakeCurrentTransformIntoVertices();\r\n\r\n        rAll.rotation.x = 1.57;\r\n\r\n        rX.parent = rCtl;\r\n        rY.parent = rCtl;\r\n        rZ.parent = rCtl;\r\n        rAll.parent = this._pALL;\r\n\r\n        this._rX = rX;\r\n        this._rY = rY;\r\n        this._rZ = rZ;\r\n        this._rAll = rAll;\r\n        this._all_r = [rX, rY, rZ, rAll];\r\n\r\n        this._setVisibility(this._all_r, 0);\r\n\r\n        //do not want clients picking this\r\n        //we will pick using mesh filter in scene.pick function\r\n        this._setPickableFalse(this._all_r);\r\n    }\r\n\r\n    private _createNonPickableRot(d: number) {\r\n\r\n        let rEndX = this._createCircle(d / 2, this._guideSize, false);\r\n        let rEndY = rEndX.clone(\"\");\r\n        let rEndZ = rEndX.clone(\"\");\r\n        let rEndAll = this._createCircle(d / 1.75, 360, false);\r\n        let rEndAll2 = this._createCircle(d / 2, 360, false);\r\n\r\n        rEndX.parent = this._rX;\r\n        rEndY.parent = this._rY;\r\n        rEndZ.parent = this._rZ;\r\n\r\n        rEndX.rotation.z = 1.57;\r\n        rEndZ.rotation.x = -1.57;\r\n\r\n        rEndAll.parent = this._rAll;\r\n        rEndAll2.parent = this._rAll;\r\n\r\n\r\n        rEndX.color = this._redCol;\r\n        rEndY.color = this._greenCol;\r\n        rEndZ.color = this._blueCol;\r\n        rEndAll.color = this._yellowCol;\r\n        rEndAll2.color = Color3.Gray();\r\n\r\n        this._rEndX = rEndX;\r\n        this._rEndY = rEndY;\r\n        this._rEndZ = rEndZ;\r\n        this._rEndAll = rEndAll;\r\n        this._rEndAll2 = rEndAll2;\r\n        this._all_rEnd = [rEndX, rEndY, rEndZ, rEndAll, rEndAll2];\r\n\r\n        this._setPickableFalse(this._all_rEnd);\r\n        this._setRenderingGroup(this._all_rEnd);\r\n    }\r\n\r\n    private _setVisibility(meshes: Mesh[], v: number) {\r\n        meshes.map((m) => m.visibility = v)\r\n    }\r\n    private _setPickableFalse(meshes: Mesh[]) {\r\n        meshes.map((m) => { m.isPickable = false })\r\n    }\r\n    private _setRenderingGroup(meshes: Mesh[]) {\r\n        meshes.map((m) => m.renderingGroupId = 2)\r\n    }\r\n\r\n    private _extrudeBox(w: number, l: number): Mesh {\r\n        let shape: Vector3[] = [new Vector3(w, w, 0), new Vector3(-w, w, 0), new Vector3(-w, -w, 0), new Vector3(w, -w, 0), new Vector3(w, w, 0)];\r\n        let path: Vector3[] = [new Vector3(0, 0, 0), new Vector3(0, 0, l)];\r\n        let box: Mesh = Mesh.ExtrudeShape(\"\", shape, path, 1, 0, 2, this._scene);\r\n        return box;\r\n    }\r\n\r\n    private _createCircle(r: number, t: number, double: boolean): LinesMesh {\r\n        if (t === null) t = 360;\r\n        let points: Vector3[] = [];\r\n        let x: number;\r\n        let z: number;\r\n        let a: number = 3.14 / 180;\r\n        let p: number = 0;\r\n        for (let i: number = 0; i <= t; i = i + 5) {\r\n            x = r * Math.cos(i * a);\r\n            if (i == 90) z = r; else if (i == 270) z = -r; else z = r * Math.sin(i * a);\r\n            points[p] = new Vector3(x, 0, z);\r\n            p++;\r\n        }\r\n        if (double) {\r\n            r = r - 0.04;\r\n            for (let i: number = 0; i <= t; i = i + 5) {\r\n                x = r * Math.cos(i * a);\r\n                if (i == 90) z = r; else if (i == 270) z = -r; else z = r * Math.sin(i * a);\r\n                points[p] = new Vector3(x, 0, z);\r\n                p++;\r\n            }\r\n        }\r\n        let circle: LinesMesh = Mesh.CreateLines(\"\", points, this._scene);\r\n        return circle;\r\n    }\r\n\r\n    private _createTube(r: number, t?: number): Mesh {\r\n        if (t === null) t = 360;\r\n        let points: Vector3[] = [];\r\n        let x: number;\r\n        let z: number;\r\n        let a: number = 3.14 / 180;\r\n        let p: number = 0;\r\n        for (let i: number = 0; i <= t; i = i + 30) {\r\n            x = r * Math.cos(i * a);\r\n            if (i == 90) z = r; else if (i == 270) z = -r; else z = r * Math.sin(i * a);\r\n            points[p] = new Vector3(x, 0, z);\r\n            p++;\r\n        }\r\n        let tube: Mesh = Mesh.CreateTube(\"\", points, this._pickWidth * this._axesScale * 2, 3, null, Mesh.NO_CAP, this._scene);\r\n        return tube;\r\n    }\r\n\r\n\r\n    private _sCtl: Mesh;\r\n\r\n    private _sX: Mesh;\r\n    private _sY: Mesh;\r\n    private _sZ: Mesh;\r\n    private _sXZ: Mesh;\r\n    private _sZY: Mesh;\r\n    private _sYX: Mesh;\r\n    private _sAll: Mesh;\r\n    private _all_s: Mesh[];\r\n\r\n    private _sEndX: Mesh;\r\n    private _sEndY: Mesh;\r\n    private _sEndZ: Mesh;\r\n    private _sEndXZ: Mesh;\r\n    private _sEndZY: Mesh;\r\n    private _sEndYX: Mesh;\r\n    private _sEndAll: Mesh;\r\n    private _all_sEnd: Mesh[];\r\n\r\n\r\n    private _createScaleAxes() {\r\n        let r: number = this._pickWidth * 2 * this._axesScale;\r\n        let l: number = this._axesLen * this._axesScale;\r\n\r\n        this._sCtl = new Mesh(\"\", this._scene);\r\n\r\n        /* pickable , invisible part */\r\n        this._createPickableScale(r, l, this._sCtl);\r\n\r\n        /* non pickable visible boxes at end of axes */\r\n        this._createNonPickableScale(r, l);\r\n\r\n\r\n    }\r\n\r\n    private _createPickableScale(r: number, l: number, sCtl: Mesh) {\r\n        let sX: Mesh = this._extrudeBox(r / 2, l);\r\n        sX.name = \"X\";\r\n        let sY: Mesh = sX.clone(\"Y\");\r\n        let sZ: Mesh = sX.clone(\"Z\");\r\n\r\n        let sXZ: Mesh = MeshBuilder.CreatePlane(\"XZ\", { size: r * 2 }, this._scene);\r\n        let sZY: Mesh = MeshBuilder.CreatePlane(\"ZY\", { size: r * 2 }, this._scene);\r\n        let sYX: Mesh = MeshBuilder.CreatePlane(\"YX\", { size: r * 2 }, this._scene);\r\n\r\n\r\n        sXZ.rotation.x = 1.57;\r\n        sZY.rotation.y = -1.57;\r\n\r\n        sXZ.position.x = 2 * r;\r\n        sXZ.position.z = 2 * r;\r\n\r\n        sZY.position.z = 2 * r;\r\n        sZY.position.y = 2 * r;\r\n\r\n        sYX.position.y = 2 * r;\r\n        sYX.position.x = 2 * r;\r\n\r\n        sXZ.bakeCurrentTransformIntoVertices();\r\n        sZY.bakeCurrentTransformIntoVertices();\r\n        sYX.bakeCurrentTransformIntoVertices();\r\n\r\n        let sAll: Mesh = Mesh.CreateBox(\"ALL\", 2 * r, this._scene);\r\n\r\n        sX.parent = sCtl;\r\n        sY.parent = sCtl;\r\n        sZ.parent = sCtl;\r\n        sAll.parent = sCtl;\r\n        sXZ.parent = sCtl;\r\n        sZY.parent = sCtl;\r\n        sYX.parent = sCtl;\r\n\r\n        sX.rotation.y = 1.57;\r\n        sY.rotation.x -= 1.57;\r\n\r\n        this._sX = sX;\r\n        this._sY = sY;\r\n        this._sZ = sZ;\r\n        this._sXZ = sXZ;\r\n        this._sZY = sZY;\r\n        this._sYX = sYX;\r\n        this._sAll = sAll;\r\n        this._all_s = [sX, sY, sZ, sXZ, sZY, sYX, sAll];\r\n\r\n        this._setVisibility(this._all_s, 0);\r\n        //do not want clients picking this\r\n        //we will pick using mesh filter in scene.pick function\r\n        this._setPickableFalse(this._all_s);\r\n    }\r\n\r\n    private _createNonPickableScale(r: number, l: number) {\r\n\r\n        let sEndX = Mesh.CreateBox(\"\", r, this._scene);\r\n        let sEndY = sEndX.clone(\"\");\r\n        let sEndZ = sEndX.clone(\"\");\r\n\r\n        let s = r * 2;\r\n        let sEndXZ = MeshBuilder.CreatePlane(\"XZ\", { size: s }, this._scene);\r\n        let sEndZY = MeshBuilder.CreatePlane(\"ZY\", { size: s }, this._scene);\r\n        let sEndYX = MeshBuilder.CreatePlane(\"YX\", { size: s }, this._scene);\r\n\r\n\r\n        let sEndAll = Mesh.CreateBox(\"ALL\", r, this._scene);\r\n\r\n        sEndXZ.rotation.x = 1.57;\r\n        sEndZY.rotation.y = -1.57;\r\n\r\n        sEndXZ.position.x = s;\r\n        sEndXZ.position.z = s;\r\n\r\n        sEndZY.position.z = s;\r\n        sEndZY.position.y = s;\r\n\r\n        sEndYX.position.y = s;\r\n        sEndYX.position.x = s;\r\n\r\n        sEndX.parent = this._sX;\r\n        sEndY.parent = this._sY;\r\n        sEndZ.parent = this._sZ;\r\n        sEndXZ.parent = this._sXZ;\r\n        sEndZY.parent = this._sZY;\r\n        sEndYX.parent = this._sYX;\r\n        sEndAll.parent = this._sAll;\r\n\r\n        sEndX.position.z = l - r / 2;\r\n        sEndY.position.z = l - r / 2;\r\n        sEndZ.position.z = l - r / 2;\r\n\r\n        sEndX.material = this._redMat;\r\n        sEndY.material = this._greenMat;\r\n        sEndZ.material = this._blueMat;\r\n        sEndXZ.material = this._greenMat;\r\n        sEndZY.material = this._redMat;\r\n        sEndYX.material = this._blueMat;\r\n        sEndAll.material = this._yellowMat;\r\n\r\n        this._sEndX = sEndX;\r\n        this._sEndY = sEndY;\r\n        this._sEndZ = sEndZ;\r\n        this._sEndXZ = sEndXZ;\r\n        this._sEndZY = sEndZY;\r\n        this._sEndYX = sEndYX;\r\n        this._sEndAll = sEndAll;\r\n        this._all_sEnd = [sEndX, sEndY, sEndZ, sEndXZ, sEndZY, sEndYX, sEndAll];\r\n\r\n        this._setPickableFalse(this._all_sEnd);\r\n        this._setRenderingGroup(this._all_sEnd);\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if a have left hand , right hand issue.\r\n     * In other words if a mesh is a LHS mesh in RHS system or \r\n     * a RHS mesh in LHS system\r\n     * The X axis will be reversed in such cases.\r\n     * thus Cross product of X and Y should be inverse of Z.\r\n     * \r\n     */\r\n    //    private _check_LHS_RHS(mesh: Mesh) {\r\n    //        let actualZ = Vector3.Cross(this._localX, this._localY);\r\n    //        //same direction or opposite direction of Z\r\n    //        if (Vector3.Dot(actualZ, this._localZ) < 0) return true;\r\n    //        else return false;\r\n    //    }\r\n\r\n    /**\r\n     * set how transparent the axes are\r\n     * 0 to 1\r\n     * 0 - completely transparent\r\n     * 1 - completely non transparent\r\n     * default is 0.75\r\n     */\r\n    public setVisibility(v: number) {\r\n        this._visibility = v;\r\n    }\r\n    public setLocal(l: boolean) {\r\n        if (this._local == l) return;\r\n        this._local = l;\r\n        if (!l) {\r\n            this._ecRoot.rotationQuaternion = Quaternion.Identity();\r\n        }\r\n    }\r\n\r\n    public isLocal(): boolean {\r\n        return this._local;\r\n    }\r\n\r\n    public setTransSnap(s: boolean) {\r\n        this._snapT = s;\r\n    }\r\n\r\n    public isTransSnap(): boolean {\r\n        return this._snapT;\r\n    }\r\n\r\n    public setRotSnap(s: boolean) {\r\n        this._snapR = s;\r\n    }\r\n    public isRotSnap(): boolean {\r\n        return this._snapR;\r\n    }\r\n\r\n    public setScaleSnap(s: boolean) {\r\n        this._snapS = s;\r\n    }\r\n    public isScaleSnap(): boolean {\r\n        return this._snapS;\r\n    }\r\n\r\n    private _tSnap: Vector3 = new Vector3(this._transSnap, this._transSnap, this._transSnap);\r\n    public setTransSnapValue(t: number) {\r\n        this._tSnap.copyFromFloats(t, t, t);\r\n        this._transSnap = t;\r\n    }\r\n    public getTransSnapValue(): number {\r\n        return this._transSnap;\r\n    }\r\n\r\n    public setRotSnapValue(r: number) {\r\n        this._rotSnap = r;\r\n    }\r\n    public getRotSnapValue(): number {\r\n        return this._rotSnap;\r\n    }\r\n\r\n    public setScaleSnapValue(r: number) {\r\n        this._scaleSnap = r;\r\n    }\r\n    public getScaleSnapValue(): number {\r\n        return this._scaleSnap;\r\n    }\r\n    //few temp vectors & matrix\r\n    private _tv1: Vector3 = new Vector3(0, 0, 0);\r\n    private _tv2: Vector3 = new Vector3(0, 0, 0);\r\n    private _tv3: Vector3 = new Vector3(0, 0, 0);\r\n    private _tm: Matrix = new Matrix();\r\n    private _getAngle2(p1: Vector3, p2: Vector3, cameraPos: Vector3, c2ec: Vector3, mN: Vector3): number {\r\n        /**\r\n         * A) find out if the camera is above , below, left, right of the rotation plane\r\n         */\r\n        //project \"camera to ec\" vector onto mesh normal to get distance to rotation plane\r\n        let d: number = Vector3.Dot(c2ec, mN);\r\n        //scale mesh normal by above ammount to get vector to rotation plane\r\n        mN.scaleToRef(d, this._tv1);\r\n        //get the point of intersection of vector from camera perpendicular to rotation plane\r\n        cameraPos.addToRef(this._tv1, this._tv2);\r\n        let i: Vector3 = this._tv2;//save some typing\r\n        //find the co-ordinate of this point in the cameras frame of reference\r\n        this._mainCamera.getWorldMatrix().invertToRef(this._tm);\r\n        Vector3.TransformCoordinatesToRef(this._tv2, this._tm, this._tv2);\r\n        //find in which quadarant the point (and thus the rotation plane) is in the camera xy plane\r\n        let q: number = 0; //(1=x y,2=-x y,3=-x -y,4=x -y)\r\n        if (i.x >= 0 && i.y >= 0) q = 1;\r\n        else if (i.x <= 0 && i.y >= 0) q = 2;\r\n        else if (i.x <= 0 && i.y <= 0) q = 3;\r\n        else if (i.x >= 0 && i.y <= 0) q = 4;\r\n\r\n        /**\r\n         * B) find out if the user moved pointer up,down, right, left\r\n         */\r\n\r\n        //find movement vector in camera frame of reference\r\n        Vector3.TransformCoordinatesToRef(p1, this._tm, this._tv1);\r\n        Vector3.TransformCoordinatesToRef(p2, this._tm, this._tv2);\r\n        this._tv2.subtractInPlace(this._tv1);\r\n        let mv: Vector3 = this._tv2; //save some typing\r\n        //for now lets set the angle magnitutde same as amount by which the mouse moved\r\n        let angle: number = mv.length();\r\n\r\n        let m: String = \"\";//(u ,d ,r,l)\r\n        if (mv.x >= 0 && mv.y >= 0) {\r\n            if (mv.x >= mv.y) m = \"r\"; else m = \"u\";\r\n        } else if (mv.x <= 0 && mv.y >= 0) {\r\n            if (-mv.x >= mv.y) m = \"l\"; else m = \"u\";\r\n        } else if (mv.x <= 0 && mv.y <= 0) {\r\n            if (-mv.x >= -mv.y) m = \"l\"; else m = \"d\";\r\n        } else if (mv.x >= 0 && mv.y <= 0) {\r\n            if (mv.x >= -mv.y) m = \"r\"; else m = \"d\";\r\n        }\r\n\r\n        /**\r\n         * C) decide if the user was trying to rotate clockwise (+1) or anti-clockwise(-1)\r\n         */\r\n\r\n        let r: number = 0;\r\n        //if mouse moved down /up and rotation plane is on  right or left side of user\r\n        if (m == \"d\") {\r\n            if (q == 1 || q == 4) r = 1;\r\n            else r = -1;\r\n        } else if (m == \"u\") {\r\n            if (q == 1 || q == 4) r = -1;\r\n            else r = 1;\r\n            //if mouse moved right/left and  rotation plane is above or below user\r\n        } else if (m == \"r\") {\r\n            if (q == 2 || q == 1) r = 1;\r\n            else r = -1;\r\n        } else if (m == \"l\") {\r\n            if (q == 2 || q == 1) r = -1;\r\n            else r = 1;\r\n        }\r\n\r\n        return r * angle;\r\n    }\r\n\r\n    /**\r\n     * finds the angle subtended from points p1 to p2 around the point p\r\n     * checks if the user was trying to rotate clockwise (+ve in LHS) or anticlockwise (-ve in LHS)\r\n     * to figure this check the orientation of the user(camera)to ec vector with the rotation normal vector\r\n     */\r\n    private _getAngle(p1: Vector3, p2: Vector3, p: Vector3, c2ec: Vector3): number {\r\n        p1.subtractToRef(p, this._tv1);\r\n        p2.subtractToRef(p, this._tv2);\r\n        Vector3.CrossToRef(this._tv1, this._tv2, this._tv3);\r\n        let angle: number = Math.asin(this._tv3.length() / (this._tv1.length() * this._tv2.length()));\r\n        //camera looking down from front of plane or looking up from behind plane\r\n        if ((Vector3.Dot(this._tv3, c2ec) > 0)) {\r\n            angle = -1 * angle;\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    private static _getStandardMaterial(col: Color3, scene: Scene): StandardMaterial {\r\n        let mat: StandardMaterial = new StandardMaterial(\"\", scene);\r\n        mat.emissiveColor = col;\r\n        mat.diffuseColor = Color3.Black();\r\n        mat.specularColor = Color3.Black();\r\n        mat.backFaceCulling = false;\r\n        return mat;\r\n    }\r\n\r\n    private _createMaterials(scene: Scene) {\r\n        this._redMat = EditControl._getStandardMaterial(this._redCol, scene);\r\n        this._greenMat = EditControl._getStandardMaterial(this._greenCol, scene);\r\n        this._blueMat = EditControl._getStandardMaterial(this._blueCol, scene);\r\n        this._whiteMat = EditControl._getStandardMaterial(this._whiteCol, scene);\r\n        this._yellowMat = EditControl._getStandardMaterial(this._yellowCol, scene);\r\n    }\r\n\r\n    private _disposeMaterials() {\r\n        this._redMat.dispose();\r\n        this._greenMat.dispose();\r\n        this._blueMat.dispose();\r\n        this._whiteMat.dispose();\r\n        this._yellowMat.dispose();\r\n    }\r\n\r\n\r\n}\r\n\r\nclass ActHist {\r\n    private mesh: TransformNode;\r\n\r\n    private lastMax: number = 10;\r\n\r\n    private acts: Array<Act> = new Array<Act>();\r\n\r\n    private last: number = -1;\r\n\r\n    private current: number = -1;\r\n\r\n    public constructor(mesh: TransformNode, capacity: number) {\r\n        this.mesh = mesh;\r\n        this.lastMax = capacity - 1;\r\n        this.add();\r\n    }\r\n\r\n    public setCapacity(c: number) {\r\n        if ((c == 0)) {\r\n            console.error(\"capacity should be more than zero\");\r\n            return;\r\n        }\r\n        this.lastMax = c - 1;\r\n        this.last = -1;\r\n        this.current = -1;\r\n        this.acts = new Array<Act>();\r\n        this.add();\r\n    }\r\n\r\n    public add(at?: number) {\r\n        if (at === undefined) at = null;\r\n        let act: Act = new Act(this.mesh, at);\r\n        if ((this.current < this.last)) {\r\n            this.acts.splice(this.current + 1);\r\n            this.last = this.current;\r\n        }\r\n        if ((this.last == this.lastMax)) {\r\n            this.acts.shift();\r\n            this.acts.push(act);\r\n        } else {\r\n            this.acts.push(act);\r\n            this.last++;\r\n            this.current++;\r\n        }\r\n    }\r\n\r\n    public undo(): number {\r\n        if ((this.current > 0)) {\r\n            let at: number = (<Act>this.acts[this.current]).getActionType()\r\n            this.current--;\r\n            (<Act>this.acts[this.current]).perform(this.mesh);\r\n            return at;\r\n        }\r\n    }\r\n\r\n    public redo() {\r\n        if ((this.current < this.last)) {\r\n            this.current++;\r\n            (<Act>this.acts[this.current]).perform(this.mesh);\r\n            return (<Act>this.acts[this.current]).getActionType()\r\n        }\r\n    }\r\n}\r\n\r\nclass Act {\r\n    private _p: Vector3;\r\n\r\n    private _rQ: Quaternion;\r\n    private _rE: Vector3;\r\n\r\n    private _s: Vector3;\r\n\r\n    //actiontype\r\n    private _at: number;\r\n\r\n    public constructor(mesh: TransformNode, at: number) {\r\n        this._p = mesh.position.clone();\r\n        //if (mesh.rotationQuaternion == null) {\r\n        if (mesh.rotationQuaternion == null) {\r\n            this._rQ = null;\r\n            this._rE = mesh.rotation.clone();\r\n        } else {\r\n            this._rQ = mesh.rotationQuaternion.clone();\r\n            this._rE = null;\r\n        }\r\n        this._s = mesh.scaling.clone();\r\n        this._at = at;\r\n    }\r\n\r\n    public getActionType(): number {\r\n        return this._at;\r\n    }\r\n\r\n    public perform(mesh: TransformNode) {\r\n        mesh.position.copyFrom(this._p)\r\n        //check if we are doing euler or quaternion now\r\n        //also check what were we doing when the rotation value\r\n        //was captured and set value accordingly\r\n        if (mesh.rotationQuaternion == null) {\r\n            if (this._rE != null) {\r\n                //mesh.rotation = this.rE.clone();\r\n                mesh.rotation.copyFrom(this._rE);\r\n            } else {\r\n                //mesh.rotation = this.r.toEulerAngles();\r\n                mesh.rotation.copyFrom(this._rQ.toEulerAngles());\r\n            }\r\n        } else {\r\n            if (this._rQ != null) {\r\n                mesh.rotationQuaternion.copyFrom(this._rQ);\r\n            } else {\r\n                //TODO use BABYLON.Quaternion.RotationYawPitchRoll(rot.y, rot.x, rot.z) instead of toQuaternion.\r\n                //mesh.rotationQuaternion.copyFrom(this.rE.toQuaternion());\r\n                mesh.rotationQuaternion.copyFrom(Quaternion.RotationYawPitchRoll(this._rE.y, this._rE.x, this._rE.z));\r\n            }\r\n        }\r\n        mesh.scaling.copyFrom(this._s);\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE_babylonjs__;"],"sourceRoot":""}